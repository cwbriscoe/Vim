= Branching =
git branch <name> - create a new branch
git checkout <name> - switch to branch
git checkout -b <name> - create a new branch and switch to it
git diff <branch1>..<branch2> - show diff between 2 branches
git diff --name-status <branch1>..<branch2> - show file diff between 2 branches
= Useful Bash aliases =
alias gstat='git status -sb'
alias glog='git log --oneline --decorate'

= Create a patch =
git format-patch master --stdout > patch

= Apply a patch =
git apply --stat patch
git apply --check patch
git am --signoff < patch

= Throw away local changes and recheck out from origin =
git checkout master -f
git pull
# or
git reset --hard HEAD
git pull

= Add a submodule =
git submodule add <repo> <dest>

= Delete a submodule =
Delete the relevant line from the .gitmodules file.
Delete the relevant section from .git/config.
git rm --cached path_to_submodule (no trailing slash).
Commit and delete the now untracked submodule files.

= Update a submodule to latest source =
CD to submodule directory and do:
git pull origin master

= Update *ALL* submodules to latest source =
git submodule foreach git pull origin master

= Short status output =
git status -sb

= Show branches and tags in git log =
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
